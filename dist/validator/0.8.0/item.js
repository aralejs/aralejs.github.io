define("#validator/0.8.0/item",["$","./parser","widget","./async","./rule"],function(a,b,c){function j(a,b,c,f){if(!d.isArray(b))throw new Error("No validation rule specified or not specified as an array.");var i=[];d.each(b,function(b,f){var g=e.parseRule(f),j=g.name,k=g.param,l=h.getOperator(j);if(!l)throw new Error('Validation rule with name "'+j+'" cannot be found.');var m=d.extend({},k,{element:a,display:k&&k.display||c||d(a).attr("name"),rule:j});i.push(function(a){l(m,a)})}),g.series(i,function(a,b){f&&f(a,b[b.length-1])})}var d=a("$"),e=a("./parser"),f=a("widget"),g=a("./async"),h=a("./rule"),i=f.extend({attrs:{rule:"",display:null,triggerType:null,required:!1,checkNull:!0},setup:function(){this.get("required")&&(!this.get("rule")||this.get("rule").indexOf("required")<0)&&this.set("rule","required "+this.get("rule"))},execute:function(a){function d(a){return a.charAt(0).toUpperCase()+a.slice(1)}this.trigger("itemValidate",this.element);var b=e.parseRules(this.get("rule")),c=this;return b?(j(this.element,b,this.get("display"),function(b,e){if(b)var f=c.get("errormessage")||c.get("errormessage"+d(b))||e;else var f=e;c.trigger("itemValidated",b,f,c.element),a&&a(b,f,c.element)}),this):this}});c.exports=i});