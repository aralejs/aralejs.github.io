define("#switchable/0.9.3/switchable",["jquery","widget","./plugins/effects","./plugins/autoplay","./plugins/circular","./plugins/multiple"],function(require,exports,module){function generateTriggersMarkup(length,activeIndex){var nav=$("<ul>");for(var i=0;i<length;i++){var className=i===activeIndex?ACTIVE_CLASS:"";$("<li>",{"class":className,html:i+1}).appendTo(nav)}return nav}var $=require("jquery"),Widget=require("widget"),Effects=require("./plugins/effects"),Autoplay=require("./plugins/autoplay"),Circular=require("./plugins/circular"),Multiple=require("./plugins/multiple"),UI_SWITCHABLE="ui-switchable",NAV_CLASS=UI_SWITCHABLE+"-nav",CONTENT_CLASS=UI_SWITCHABLE+"-content",TRIGGER_CLASS=UI_SWITCHABLE+"-trigger",PANEL_CLASS=UI_SWITCHABLE+"-panel",ACTIVE_CLASS=UI_SWITCHABLE+"-active",Switchable=Widget.extend({attrs:{triggers:{value:[],getter:function(val){return $(val)}},panels:{value:[],getter:function(val){return $(val)}},hasTriggers:!0,triggerType:"hover",delay:100,effect:"none",easing:"linear",duration:500,activeIndex:0,step:1,length:{readOnly:!0,getter:function(){return this.panels.length/this.get("step")}},viewSize:[]},setup:function(){this._parseRole(),this._initElement(),this._initPanels(),this._initTriggers(),this._initPlugins(),this.render()},_parseRole:function(){var role=this.dataset.role;if(!role)return;var element=this.element,triggers=this.get("triggers"),panels=this.get("panels");triggers.length===0&&(role.trigger||role.nav)&&(triggers=element.find(role.trigger||role.nav+" > *")),panels.length===0&&(role.panel||role.content)&&(panels=element.find(role.panel||role.content+" > *")),this.set("triggers",triggers),this.set("panels",panels)},_initElement:function(){this.element.addClass(UI_SWITCHABLE)},_initPanels:function(){var panels=this.panels=this.get("panels");if(panels.length===0)throw new Error("panels.length is ZERO");this.content=panels.parent().addClass(CONTENT_CLASS),panels.addClass(PANEL_CLASS)},_initTriggers:function(){var triggers=this.triggers=this.get("triggers");triggers.length===0&&this.get("hasTriggers")?(this.nav=generateTriggersMarkup(this.get("length"),this.get("activeIndex")).appendTo(this.element),this.triggers=this.nav.children()):this.nav=triggers.parent(),this.triggers.addClass(TRIGGER_CLASS),this.nav.addClass(NAV_CLASS),this.triggers.each(function(i,trigger){$(trigger).data("value",i)}),this._bindTriggers()},_initPlugins:function(){this._plugins=[],this._plug(Effects),this._plug(Autoplay),this._plug(Circular),this._plug(Multiple)},_bindTriggers:function(){function focus(ev){that._onFocusTrigger(ev.type,$(this).data("value"))}function leave(){clearTimeout(that._switchTimer)}var that=this;this.get("triggerType")==="click"?this.triggers.click(focus):this.triggers.hover(focus,leave)},_onFocusTrigger:function(type,index){var that=this;type==="click"?this.switchTo(index):this._switchTimer=setTimeout(function(){that.switchTo(index)},this.get("delay"))},switchTo:function(toIndex){return this.set("activeIndex",toIndex),this},_onRenderActiveIndex:function(toIndex,fromIndex){this._triggerIsValid(toIndex,fromIndex)&&this._switchTo(toIndex,fromIndex)},_switchTo:function(toIndex,fromIndex){this.trigger("switch",toIndex,fromIndex),this._switchTrigger(toIndex,fromIndex),this._switchPanel(this._getPanelInfo(toIndex,fromIndex)),this.trigger("switched",toIndex,fromIndex)},_triggerIsValid:function(toIndex,fromIndex){return toIndex!==fromIndex},_switchTrigger:function(toIndex,fromIndex){var triggers=this.triggers;if(triggers.length<1)return;triggers.eq(fromIndex).removeClass(ACTIVE_CLASS),triggers.eq(toIndex).addClass(ACTIVE_CLASS)},_switchPanel:function(panelInfo){panelInfo.fromPanels.hide(),panelInfo.toPanels.show()},_getPanelInfo:function(toIndex,fromIndex){var panels=this.panels.get(),step=this.get("step");if(fromIndex>-1)var begin=fromIndex*step,end=(fromIndex+1)*step,fromPanels=panels.slice(begin,end);var toPanels=panels.slice(toIndex*step,(toIndex+1)*step);return{toIndex:toIndex,fromIndex:fromIndex,toPanels:$(toPanels),fromPanels:$(fromPanels)}},prev:function(){var fromIndex=this.get("activeIndex"),index=(fromIndex-1+this.get("length"))%this.length;this.switchTo(index)},next:function(){var fromIndex=this.get("activeIndex"),index=(fromIndex+1)%this.get("length");this.switchTo(index)},_plug:function(plugin){if(!plugin.isNeeded.call(this))return;var pluginAttrs=plugin.attrs,methods=plugin.methods;if(pluginAttrs)for(var key in pluginAttrs)pluginAttrs.hasOwnProperty(key)&&!(key in this.attrs)&&this.set(key,pluginAttrs[key]);if(methods)for(var method in methods)methods.hasOwnProperty(method)&&(this[method]=methods[method]);plugin.install&&plugin.install.call(this),this._plugins.push(plugin)},destroy:function(){$.each(this._plugins,function(i,plugin){plugin.destroy&&plugin.destroy.call(this)}),Switchable.superclass.destroy.call(this)}});module.exports=Switchable});